openapi: 3.0.0
info:
  title: API Specification
  version: v1
paths:
  /api/products:
    get:
      summary: Retrieve a list of all products in the store.
      description: Retrieve a list of all products in the store.
    post:
      summary: Create a new product in the store.
      description: Create a new product in the store.
      requestBody:
        required: true
      parameters:
        - in: body
          name: product
          schema:
            type: object
  /api/users:
    get:
      summary: Retrieve a list of all users in the system.
      description: Retrieve a list of all users in the system.
    post:
      summary: Create a new user in the system.
      description: Create a new user in the system.
      requestBody:
        required: true
      parameters:
        - in: body
          name: user
          schema:
            type: object
  /api/products/{id}:
    get:
      summary: Retrieve a product by its ID.
      description: Retrieve a product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    put:
      summary: Update a product by its ID.
      description: Update a product by its ID.
      requestBody:
        required: true
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    delete:
      summary: Delete a product by its ID.
      description: Delete a product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
  /api/users/{id}:
    get:
      summary: Retrieve a user by their ID.
      description: Retrieve a user by their ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    put:
      summary: Update a user by their ID.
      description: Update a user by their ID.
      requestBody:
        required: true
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    delete:
      summary: Delete a user by their ID.
      description: Delete a user by their ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
  /products:
    get:
      summary: Retrieve a list of products with optional filtering by category and price range.
      description: Retrieve a list of products with optional filtering by category and price range.
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Category filter
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum price filter
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum price filter
      tags:
        - Products
    post:
      summary: Create a new product.
      description: Create a new product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/Product'
      parameters:
        - in: body
          name: stock
          schema:
            $ref: '#/definitions/Product'
          required: true
          description: Product stock quantity
  /products/{id}:
    get:
      summary: Retrieve a single product by its ID.
      description: Retrieve a single product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - Products
    put:
      summary: Update a product.
      description: Update a product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Product'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/Product'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    delete:
      summary: Delete a product.
      description: Delete a product.
      tags:
        - Products
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/Product'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
  /users:
    get:
      summary: Retrieve a list of all users, excluding sensitive information.
      description: Retrieve a list of all users, excluding sensitive information.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                  required:
                    - id
                    - username
                    - email
  /users/{id}:
    get:
      summary: Retrieve user profile information, excluding sensitive information.
      description: Retrieve user profile information, excluding sensitive information.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /register:
    post:
      summary: Create a new user account.
      description: Create a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to the user's cart.
      description: Add an item to the user's cart.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
      responses:
        '201':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
                  required:
                    - productId
                    - quantity
  /users/{id}/checkout:
    post:
      summary: Complete the user's order.
      description: Complete the user's order.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                  date:
                    type: string
                  total:
                    type: number
                required:
                  - id
                  - items
                  - date
definitions:
  Product:
    type: object

