openapi: 3.0.0
info:
  title: API Specification
  version: v1
paths:
  /api/products:
    get:
      summary: Retrieve a list of all products
      tags:
        - Products
    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  required: true
                price:
                  type: number
                  required: true
  /api/users:
    get:
      summary: Retrieve a list of all users
      tags:
        - Users
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
  /api/products/{id}:
    get:
      summary: Retrieve a specific product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    put:
      summary: Update a specific product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    delete:
      summary: Delete a specific product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
  /api/users/{id}:
    get:
      summary: Retrieve a specific user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    put:
      summary: Update a specific user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
    delete:
      summary: Delete a specific user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
  /products:
    get:
      summary: Retrieve a list of products
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: string
                stock:
                  type: integer
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  category:
                    type: string
                  stock:
                    type: integer
  /products/{id}:
    get:
      summary: Retrieve a single product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
    put:
      summary: Update a product
      parameters:
        - in: path
          name: id
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: string
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  category:
                    type: string
    delete:
      summary: Delete a product
      parameters:
        - in: path
          name: id
          schema:
            type: integer
  /users:
    get:
      summary: Retrieve a minimal user list
      responses:
        '200':
          description: User list retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
  /users/{id}:
    get:
      summary: Retrieve a user's profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /register:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to a user's cart
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  required: true
                quantity:
                  type: integer
                  default: 1
      responses:
        '200':
          description: Item added to cart
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
  /users/{id}/checkout:
    post:
      summary: Create a new order for the user's cart
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  required: true
                quantity:
                  type: integer
                  default: 1
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                  date:
                    type: string
                  total:
                    type: number
                required:
                  - id
                  - items

